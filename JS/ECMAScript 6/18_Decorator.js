1 类的修饰
// 修饰器（Decorator）是一个函数，用来修改类的行为。这是ES7的一个提案，目前Babel转码器已经支持。
// 修饰器对类的行为的改变，是代码编译时发生的，而不是在运行时。这意味着，修饰器能在编译阶段运行代码。



// 2 方法的修饰



// 3 为什么修饰器不能用于函数？
// 修饰器只能用于类和类的方法，不能用于函数，因为存在函数提升。



// 4 core-decorators.js
// core-decorators.js是一个第三方模块，提供了几个常见的修饰器，通过它可以更好地理解修饰器。




// 5 使用修饰器实现自动发布事件
// 我们可以使用修饰器，使得对象的方法被调用时，自动发出一个事件。




6 Mixin
// 在修饰器的基础上，可以实现Mixin模式。所谓Mixin模式，就是对象继承的一种替代方案，中文译为“混入”（mix in），意为在一个对象之中混入另外一个对象的方法。



7 Trait
// Trait也是一种修饰器，效果与Mixin类似，但是提供更多功能，比如防止同名方法的冲突、排除混入某些方法、为混入的方法起别名等等。
// 下面采用traits-decorator这个第三方模块作为例子。这个模块提供的traits修饰器，不仅可以接受对象，还可以接受ES6类作为参数。




// 8 Babel转码器的支持
// 目前，Babel转码器已经支持Decorator。
// 首先，安装babel-core和babel-plugin-transform-decorators。由于后者包括在babel-preset-stage-0之中，所以改为安装babel-preset-stage-0亦可。
